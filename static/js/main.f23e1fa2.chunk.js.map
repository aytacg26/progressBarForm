{"version":3,"sources":["components/SuccessErrorWindow/SuccessErrorWindow.module.scss","components/Error/Error.module.scss","components/Success/Success.module.scss","components/ProgressBar/ProgressBar.module.scss","components/Input/Input.module.scss","components/DropDown/DropDown.module.scss","components/Button/Button.module.scss","components/WindowContainer/WindowContainer.module.scss","components/UserForm/UserForm.module.scss","components/WindowContainer/WindowContainer.tsx","components/Success/Success.tsx","components/Error/Error.tsx","components/SuccessErrorWindow/SuccessErrorWindow.tsx","components/ProgressBar/ProgressBar.tsx","components/Input/Input.tsx","components/DropDown/DropDown.tsx","components/Button/Button.tsx","utils/utils.ts","data/dropdownData.ts","components/UserForm/UserForm.tsx","Hooks/useProgress.tsx","components/FormContainer/FormContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","WindowContainer","children","className","classes","Success","version","xmlns","viewBox","path","cicle","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","check","strokeLinecap","points","Error","circle","line","x1","y1","x2","y2","SuccessErrorWindow","success","error","successMessage","errorMessage","footerMessageOnError","footerMessageOnSuccess","TopMessage","AnimationSection","BottomMessage","ProgressBar","progressValue","useState","currentVal","setCurrentValue","useEffect","timer","setTimeout","prevState","clearTimeout","ProgressContainer","Progress","style","width","color","Input","label","isValid","placeholder","type","name","value","onChange","onBlur","formGroup","invalid","DropDown","options","emptyText","map","option","text","Button","disabled","Disabled","textValidation","minLength","maxLength","specialCharRegex","hasSpecialChars","test","hasValidLength","length","monthOptions","id","yearOptions","minAge","maxAge","todayYear","Date","getFullYear","endYear","i","toString","push","createYearOptions","UserForm","sendData","clearForm","data","surname","email","currentJob","month","year","formData","setFormData","hasTouchedName","setHasTouchedName","hasTouchedSurname","setHasTouchedSurname","hasTouchedMonth","setHasTouchedMonth","hasTouchedYear","setHasTouchedYear","hasTouchedEmail","setHasTouchedEmail","hasTouchedJob","setHasTouchedJob","isValidEmail","split","emailValidation","isValidJob","isValidName","isValidSurname","isValidYear","isValidMonth","nameProgress","surnameProgress","monthProgress","yearProgress","emailProgress","jobProgress","progress","Math","ceil","useProgress","formEntryHandler","e","target","onSubmit","preventDefault","birthData","FormContainer","setSuccess","setError","dataSend","setDataSend","setData","showForm","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f23e1fa2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopMessage\":\"SuccessErrorWindow_TopMessage__3U5Fk\",\"Success\":\"SuccessErrorWindow_Success__7vY_R\",\"Error\":\"SuccessErrorWindow_Error__2vq_0\",\"BottomMessage\":\"SuccessErrorWindow_BottomMessage__GMs1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"path\":\"Error_path__1WRNK\",\"cicle\":\"Error_cicle__1vVpZ\",\"dash\":\"Error_dash__23Zox\",\"line\":\"Error_line__1Nig-\",\"check\":\"Error_check__2erMU\",\"dash-check\":\"Error_dash-check__smNdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"path\":\"Success_path__2qhmk\",\"cicle\":\"Success_cicle__1mFLM\",\"dash\":\"Success_dash__hXpG9\",\"line\":\"Success_line__2_e67\",\"check\":\"Success_check__UiT8v\",\"dash-check\":\"Success_dash-check__3OqjX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProgressContainer\":\"ProgressBar_ProgressContainer__CXaSd\",\"Progress\":\"ProgressBar_Progress__2T0rH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"Input_formGroup__HqaGK\",\"invalid\":\"Input_invalid__1SKlp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"DropDown_formGroup__2wHmm\",\"invalid\":\"DropDown_invalid__2cLQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__iuCq8\",\"Disabled\":\"Button_Disabled__2wEGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WindowContainer\":\"WindowContainer_WindowContainer__3y2mA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"UserForm_FormContainer__3UTMU\"};","import React from 'react';\r\nimport classes from './WindowContainer.module.scss';\r\n\r\ninterface IProps {\r\n  children: JSX.Element | string | JSX.Element[];\r\n}\r\n\r\nconst WindowContainer = ({ children }: IProps) => {\r\n  return <div className={classes.WindowContainer}>{children}</div>;\r\n};\r\n\r\nexport default WindowContainer;\r\n","import React from 'react';\r\nimport classes from './Success.module.scss';\r\n\r\n//Animated Check Mark & Cross Icon using css Designed by Lee Porter\r\nconst Success = () => {\r\n  return (\r\n    <svg\r\n      version='1.1'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 130.2 130.2'\r\n    >\r\n      <circle\r\n        className={`${classes.path} ${classes.cicle}`}\r\n        fill='none'\r\n        stroke='#73AF55'\r\n        strokeWidth='6'\r\n        strokeMiterlimit='10'\r\n        cx='65.1'\r\n        cy='65.1'\r\n        r='62.1'\r\n      />\r\n      <polyline\r\n        className={`${classes.path} ${classes.check}`}\r\n        fill='none'\r\n        stroke='#73AF55'\r\n        strokeWidth='6'\r\n        strokeLinecap='round'\r\n        strokeMiterlimit='10'\r\n        points='100.2,40.2 51.5,88.8 29.8,67.5 '\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport classes from './Error.module.scss';\r\n\r\n//Animated Check Mark & Cross Icon using css Designed by Lee Porter\r\nconst Error = () => {\r\n  return (\r\n    <svg\r\n      version='1.1'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 130.2 130.2'\r\n    >\r\n      <circle\r\n        className={`${classes.path} ${classes.circle}`}\r\n        fill='none'\r\n        stroke='#D06079'\r\n        strokeWidth='6'\r\n        strokeMiterlimit='10'\r\n        cx='65.1'\r\n        cy='65.1'\r\n        r='62.1'\r\n      />\r\n      <line\r\n        className={`${classes.path} ${classes.line}`}\r\n        fill='none'\r\n        stroke='#D06079'\r\n        strokeWidth='6'\r\n        strokeLinecap='round'\r\n        strokeMiterlimit='10'\r\n        x1='34.4'\r\n        y1='37.9'\r\n        x2='95.8'\r\n        y2='92.3'\r\n      />\r\n      <line\r\n        className={`${classes.path} ${classes.line}`}\r\n        fill='none'\r\n        stroke='#D06079'\r\n        strokeWidth='6'\r\n        strokeLinecap='round'\r\n        strokeMiterlimit='10'\r\n        x1='95.8'\r\n        y1='38'\r\n        x2='34.4'\r\n        y2='92.2'\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { Fragment } from 'react';\r\nimport Success from '../Success/Success';\r\nimport Error from '../Error/Error';\r\nimport classes from './SuccessErrorWindow.module.scss';\r\n\r\ninterface IProps {\r\n  success: boolean;\r\n  error: boolean;\r\n  successMessage?: string;\r\n  errorMessage?: string;\r\n  footerMessageOnError?: string;\r\n  footerMessageOnSuccess?: string;\r\n}\r\n\r\nconst SuccessErrorWindow = ({\r\n  success,\r\n  error,\r\n  successMessage,\r\n  errorMessage,\r\n  footerMessageOnError,\r\n  footerMessageOnSuccess,\r\n}: IProps) => {\r\n  return (\r\n    <Fragment>\r\n      {success && (\r\n        <div className={`${classes.TopMessage} ${classes.Success}`}>\r\n          <h3>{successMessage}</h3>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className={`${classes.TopMessage} ${classes.Error}`}>\r\n          <h3>{errorMessage}</h3>\r\n        </div>\r\n      )}\r\n      <div className={classes.AnimationSection}>\r\n        {success && <Success />}\r\n        {error && <Error />}\r\n      </div>\r\n\r\n      <div\r\n        className={`${classes.BottomMessage} ${\r\n          success ? classes.Success : classes.Error\r\n        }`}\r\n      >\r\n        {success && <p>{footerMessageOnSuccess}</p>}\r\n        {error && <p>{footerMessageOnError}</p>}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SuccessErrorWindow;\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './ProgressBar.module.scss';\r\n\r\ninterface IProps {\r\n  progressValue: number;\r\n}\r\n\r\nconst ProgressBar = ({ progressValue }: IProps) => {\r\n  const [currentVal, setCurrentValue] = useState(progressValue);\r\n\r\n  useEffect(() => {\r\n    let timer: any;\r\n    if (currentVal < progressValue && currentVal !== 100) {\r\n      timer = setTimeout(() => {\r\n        setCurrentValue((prevState) => prevState + 1);\r\n      }, 45);\r\n    }\r\n\r\n    if (progressValue < currentVal && currentVal !== 0) {\r\n      timer = setTimeout(() => {\r\n        setCurrentValue((prevState) => prevState - 1);\r\n      }, 45);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [currentVal, progressValue, setCurrentValue]);\r\n\r\n  return (\r\n    <div className={classes.ProgressContainer}>\r\n      <div className={classes.Progress} style={{ width: `${currentVal}%` }} />\r\n      <span style={{ color: progressValue >= 50 ? '#fff' : '#4e4e4e' }}>\r\n        {currentVal}%\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport classes from './Input.module.scss';\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  isValid?: boolean;\r\n  placeholder?: string;\r\n  type: string;\r\n  name?: string;\r\n  value: string;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onBlur?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst Input = ({\r\n  label,\r\n  isValid,\r\n  placeholder,\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  onBlur,\r\n}: IProps) => {\r\n  return (\r\n    <div className={classes.formGroup}>\r\n      {label && <label>{label}</label>}\r\n      <input\r\n        placeholder={placeholder}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={!isValid ? `${classes.invalid}` : ''}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport classes from './DropDown.module.scss';\r\n\r\ninterface IProps {\r\n  options: { value: string; text: string; id: string }[];\r\n  value: string;\r\n  label?: string;\r\n  emptyText?: string;\r\n  isValid?: boolean;\r\n  name?: string;\r\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n}\r\n\r\nconst DropDown = ({\r\n  options,\r\n  value,\r\n  label,\r\n  emptyText,\r\n  isValid,\r\n  name,\r\n  onChange,\r\n}: IProps) => {\r\n  return (\r\n    <div className={classes.formGroup}>\r\n      {label && <label>{label}</label>}\r\n      <select\r\n        onChange={onChange}\r\n        className={!isValid ? `${classes.invalid}` : ''}\r\n        value={value}\r\n        name={name}\r\n      >\r\n        <option value=''>{emptyText}</option>\r\n        {options.map((option) => (\r\n          <option value={option.value} key={option.text}>\r\n            {option.text}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\ninterface IProps {\r\n  type?: 'button' | 'submit' | 'reset' | undefined;\r\n  children: JSX.Element | string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst Button = ({ children, type, disabled }: IProps) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={`${classes.Button} ${disabled && classes.Disabled}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const emailValidation = (email: string) => {\r\n  const emailRegex =\r\n    //eslint-disable-next-line\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  //at least 4 chars and at most 128 characters will be accepted\r\n  const hasValidLength = email.length > 4 && email.length <= 128;\r\n\r\n  //Regex test:\r\n  const isValidEmail = emailRegex.test(email);\r\n\r\n  //No need but check if it has at least one \".\" dot in domain section\r\n  if (hasValidLength && isValidEmail) {\r\n    const domainSection = email.split('@')[1];\r\n    const hasAtLeastOneDot = domainSection.split('.').length >= 2;\r\n\r\n    //if hasValidLength && isValidEmail, the return from this one will give us expected result\r\n    return hasAtLeastOneDot;\r\n  }\r\n\r\n  //if it does not enter the above condition, anycase it won't be a valid email\r\n  return false;\r\n};\r\n\r\nexport const textValidation = (\r\n  text: string,\r\n  minLength: number = 2,\r\n  maxLength: number = 60\r\n) => {\r\n  //eslint-disable-next-line\r\n  const specialCharRegex = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n  const hasSpecialChars = specialCharRegex.test(text);\r\n  const hasValidLength = text.length >= minLength && text.length <= maxLength;\r\n\r\n  return hasValidLength && !hasSpecialChars;\r\n};\r\n","export const monthOptions = [\r\n  { value: 'Jan', text: 'January', id: 'month-0001-jan' },\r\n  { value: 'Feb', text: 'February', id: 'month-0002-feb' },\r\n  { value: 'Mar', text: 'March', id: 'month-0003-mar' },\r\n  { value: 'Apr', text: 'April', id: 'month-0004-apr' },\r\n  { value: 'May', text: 'May', id: 'month-0005-may' },\r\n  { value: 'Jun', text: 'June', id: 'month-0006-jun' },\r\n  { value: 'Jul', text: 'July', id: 'month-0007-jul' },\r\n  { value: 'Aug', text: 'August', id: 'month-0008-aug' },\r\n  { value: 'Sep', text: 'September', id: 'month-0009-sep' },\r\n  { value: 'Oct', text: 'October', id: 'month-0010-oct' },\r\n  { value: 'Nov', text: 'November', id: 'month-0011-nov' },\r\n  { value: 'Dec', text: 'December', id: 'month-0012-dec' },\r\n];\r\n\r\nconst createYearOptions = (minAge: number, maxAge: number) => {\r\n  const today = new Date();\r\n  const todayYear = today.getFullYear();\r\n\r\n  const startYear = todayYear - minAge;\r\n  const endYear = todayYear - maxAge;\r\n  const options = [];\r\n\r\n  for (let i = startYear; i >= endYear; i--) {\r\n    const option = {\r\n      value: i.toString(),\r\n      text: i.toString(),\r\n      id: `year-val-${i}`,\r\n    };\r\n\r\n    options.push(option);\r\n  }\r\n\r\n  return options;\r\n};\r\n\r\nexport const yearOptions = createYearOptions(18, 98);\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport Input from '../Input/Input';\r\nimport DropDown from '../DropDown/DropDown';\r\nimport Button from '../Button/Button';\r\nimport { sendData, formData } from '../../Interfaces/FormInterfaces';\r\nimport { useProgress } from '../../Hooks/useProgress';\r\nimport { monthOptions, yearOptions } from '../../data/dropdownData';\r\nimport classes from './UserForm.module.scss';\r\n\r\ninterface IProps {\r\n  sendData: (data: sendData) => void;\r\n  clearForm?: boolean;\r\n  data: formData;\r\n}\r\n\r\ntype eventParam =\r\n  | React.ChangeEvent<HTMLInputElement>\r\n  | React.ChangeEvent<HTMLSelectElement>;\r\n\r\nconst UserForm = ({ sendData, clearForm, data }: IProps) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    currentJob: '',\r\n    month: '',\r\n    year: '',\r\n  });\r\n\r\n  const [hasTouchedName, setHasTouchedName] = useState(false);\r\n  const [hasTouchedSurname, setHasTouchedSurname] = useState(false);\r\n  const [hasTouchedMonth, setHasTouchedMonth] = useState(false);\r\n  const [hasTouchedYear, setHasTouchedYear] = useState(false);\r\n  const [hasTouchedEmail, setHasTouchedEmail] = useState(false);\r\n  const [hasTouchedJob, setHasTouchedJob] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (clearForm) {\r\n      setFormData({\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        currentJob: '',\r\n        month: '',\r\n        year: '',\r\n      });\r\n    } else {\r\n      setFormData({ ...data });\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [clearForm, data]);\r\n\r\n  const { name, surname, email, currentJob, month, year } = formData;\r\n  const {\r\n    isValidEmail,\r\n    isValidJob,\r\n    isValidName,\r\n    isValidSurname,\r\n    isValidMonth,\r\n    isValidYear,\r\n    progress,\r\n  } = useProgress(formData);\r\n\r\n  const formEntryHandler = (e: eventParam) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({ ...prevState, [name]: value }));\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        !hasTouchedName && setHasTouchedName(true);\r\n        break;\r\n      case 'surname':\r\n        !hasTouchedSurname && setHasTouchedSurname(true);\r\n        break;\r\n      case 'month':\r\n        !hasTouchedMonth && setHasTouchedMonth(true);\r\n        break;\r\n      case 'year':\r\n        !hasTouchedYear && setHasTouchedYear(true);\r\n        break;\r\n      case 'email':\r\n        !hasTouchedEmail && setHasTouchedEmail(true);\r\n        break;\r\n      default:\r\n        !hasTouchedJob && setHasTouchedJob(true);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const formSubmitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isValidData =\r\n      isValidName &&\r\n      isValidSurname &&\r\n      isValidEmail &&\r\n      isValidMonth &&\r\n      isValidYear &&\r\n      isValidJob;\r\n\r\n    if (isValidData) {\r\n      sendData({\r\n        name,\r\n        surname,\r\n        email,\r\n        currentJob,\r\n        birthData: { month, year },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler} className={classes.FormContainer}>\r\n      <h1>Registration Form</h1>\r\n      <ProgressBar progressValue={progress} />\r\n      <Input\r\n        type='text'\r\n        value={name}\r\n        onChange={formEntryHandler}\r\n        isValid={hasTouchedName ? isValidName : true}\r\n        label='Name'\r\n        placeholder='Please enter your name...'\r\n        name='name'\r\n      />\r\n      <Input\r\n        type='text'\r\n        value={surname}\r\n        onChange={formEntryHandler}\r\n        isValid={hasTouchedSurname ? isValidSurname : true}\r\n        label='Surname'\r\n        placeholder='Please enter your surname...'\r\n        name='surname'\r\n      />\r\n      <DropDown\r\n        options={monthOptions}\r\n        emptyText='Select Month'\r\n        label='Birth Month'\r\n        onChange={formEntryHandler}\r\n        isValid={hasTouchedMonth ? isValidMonth : true}\r\n        value={month}\r\n        name='month'\r\n      />\r\n      <DropDown\r\n        options={yearOptions}\r\n        emptyText='Select Year'\r\n        label='Birth Year'\r\n        onChange={formEntryHandler}\r\n        isValid={hasTouchedYear ? isValidYear : true}\r\n        value={year}\r\n        name='year'\r\n      />\r\n      <Input\r\n        type='text'\r\n        value={email}\r\n        onChange={formEntryHandler}\r\n        isValid={hasTouchedEmail ? isValidEmail : true}\r\n        label='Email'\r\n        placeholder='Please enter your email address...'\r\n        name='email'\r\n      />\r\n      <Input\r\n        type='text'\r\n        value={currentJob}\r\n        onChange={formEntryHandler}\r\n        isValid={hasTouchedJob ? isValidJob : true}\r\n        label='Current Job (Please do not use special characters (ex: &amp;,?,!)'\r\n        placeholder='Please enter your current job...'\r\n        name='currentJob'\r\n      />\r\n      {progress < 100 && (\r\n        <Button type='button' disabled>\r\n          Please Complete Form\r\n        </Button>\r\n      )}\r\n      {progress >= 100 && <Button type='submit'>Register</Button>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import { emailValidation, textValidation } from '../utils/utils';\r\n\r\ninterface IForm {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  currentJob: string;\r\n  month: string;\r\n  year: string;\r\n}\r\n\r\n//Not a reusable hook, it can be just used for this type of forms\r\nexport const useProgress = (formData: IForm) => {\r\n  const { name, surname, email, currentJob, month, year } = formData;\r\n\r\n  let isValidEmail = emailValidation(email);\r\n  let isValidJob = textValidation(currentJob, 5, 80);\r\n  let isValidName = textValidation(name);\r\n  let isValidSurname = textValidation(surname);\r\n  let isValidYear = year.length > 0;\r\n  let isValidMonth = month.length > 0;\r\n  const nameProgress = isValidName ? 1 : 0;\r\n  const surnameProgress = isValidSurname ? 1 : 0;\r\n  const monthProgress = isValidMonth ? 1 : 0;\r\n  const yearProgress = isValidYear ? 1 : 0;\r\n  const emailProgress = isValidEmail ? 1 : 0;\r\n  const jobProgress = isValidJob ? 1 : 0;\r\n  const progressSlicePerField = Math.ceil(100 / 6);\r\n  const progress =\r\n    progressSlicePerField *\r\n    (nameProgress +\r\n      surnameProgress +\r\n      monthProgress +\r\n      yearProgress +\r\n      emailProgress +\r\n      jobProgress);\r\n\r\n  return {\r\n    isValidName,\r\n    isValidSurname,\r\n    isValidEmail,\r\n    isValidJob,\r\n    isValidYear,\r\n    isValidMonth,\r\n    progress,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { sendData } from '../../Interfaces/FormInterfaces';\r\nimport WindowContainer from '../WindowContainer/WindowContainer';\r\nimport SuccessErrorWindow from '../SuccessErrorWindow/SuccessErrorWindow';\r\nimport UserForm from '../UserForm/UserForm';\r\n\r\nconst FormContainer = () => {\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [dataSend, setDataSend] = useState(false);\r\n  const [data, setData] = useState({\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    currentJob: '',\r\n    month: '',\r\n    year: '',\r\n  });\r\n  const showForm = !success && !error;\r\n\r\n  useEffect(() => {\r\n    let timer: any;\r\n\r\n    if (error || success) {\r\n      timer = setTimeout(() => {\r\n        setError(false);\r\n        setSuccess(false);\r\n      }, 4000);\r\n    }\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [success, error]);\r\n\r\n  const formDataHandler = (data: sendData) => {\r\n    setData({\r\n      name: data.name,\r\n      surname: data.surname,\r\n      email: data.email,\r\n      currentJob: data.currentJob,\r\n      month: data.birthData.month,\r\n      year: data.birthData.year,\r\n    });\r\n\r\n    //send data to server, in case of success, successRes will be true, else will be false;\r\n    let successRes = true;\r\n    //on success\r\n    if (successRes) {\r\n      setSuccess(true);\r\n      setDataSend(true);\r\n      console.log(data);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WindowContainer>\r\n      {showForm ? (\r\n        <UserForm sendData={formDataHandler} clearForm={dataSend} data={data} />\r\n      ) : (\r\n        <SuccessErrorWindow\r\n          success={success}\r\n          error={error}\r\n          successMessage='You are registered successfully'\r\n          errorMessage='Unexpected Error Occured, Please try again later'\r\n          footerMessageOnSuccess='This is a small information message on Success (optional)'\r\n          footerMessageOnError='This is a small information message on Error (optional)'\r\n        />\r\n      )}\r\n    </WindowContainer>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import './App.css';\nimport FormContainer from './components/FormContainer/FormContainer';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <FormContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}